{"ast":null,"code":"import _slicedToArray from\"/Users/nathanielgreene/Documents/GitHub/nathaniel-greene-dot-org/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import\"./index.scss\";import{Link}from\"react-router-dom\";import{useEffect,useState}from\"react\";import AnimatedLetters from\"../AnimatedLetters\";import Logo from'./Logo';import Loader from\"react-loaders\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var Home=function Home(){var _useState=useState('text-animate'),_useState2=_slicedToArray(_useState,2),letterClass=_useState2[0],setLetterClass=_useState2[1];var nameArray=[' ','N','a','t','h','a','n','i','e','l',','];var jobArray=['s','o','f','t','w','a','r','e',' ','d','e','v','e','l','o','p','e','r','.'];useEffect(function(){setTimeout(function(){setLetterClass('text-animate-hover');},5000);},[]);return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"container home-page\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"text-zone\",children:[/*#__PURE__*/_jsxs(\"h1\",{children:[/*#__PURE__*/_jsx(\"span\",{className:letterClass,children:\"H\"}),/*#__PURE__*/_jsx(\"span\",{className:\"\".concat(letterClass,\" _12\"),children:\"i,\"}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"span\",{className:\"\".concat(letterClass,\" _13\"),children:\"I\"}),/*#__PURE__*/_jsx(\"span\",{className:\"\".concat(letterClass,\" _14\"),children:\"'m\"}),/*#__PURE__*/_jsx(AnimatedLetters,{letterClass:letterClass,strArray:nameArray,idx:15}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(AnimatedLetters,{letterClass:letterClass,strArray:jobArray,idx:27})]}),/*#__PURE__*/_jsx(\"h2\",{children:\"Software Engineer / Backend / Java / Golang / REST API / Agile\"}),/*#__PURE__*/_jsx(Link,{to:\"/contact\",className:\"flat-button\",children:\"Contact Me.\"})]}),/*#__PURE__*/_jsx(Logo,{})]}),/*#__PURE__*/_jsx(Loader,{type:\"line-scale\"})]});};export default Home;","map":{"version":3,"names":["Link","useEffect","useState","AnimatedLetters","Logo","Loader","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Home","_useState","_useState2","_slicedToArray","letterClass","setLetterClass","nameArray","jobArray","setTimeout","children","className","concat","strArray","idx","to","type"],"sources":["/Users/nathanielgreene/Documents/GitHub/nathaniel-greene-dot-org/src/components/Home/index.js"],"sourcesContent":["import \"./index.scss\";\nimport { Link } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\nimport AnimatedLetters from \"../AnimatedLetters\";\nimport Logo from './Logo';\nimport Loader from \"react-loaders\";\n\nconst Home = () => {\n    const [letterClass, setLetterClass] = useState('text-animate');\n    const nameArray = [' ', 'N', 'a', 't', 'h', 'a', 'n', 'i', 'e', 'l', ','];\n    const jobArray = ['s','o','f','t','w','a','r','e',' ','d','e','v','e','l','o','p','e','r','.'];\n\n    useEffect(() => {\n        setTimeout(() => {\n            setLetterClass('text-animate-hover')\n        }, 5000)\n    }, [])\n\n    return (\n        <>\n        <div className=\"container home-page\">\n            <div className=\"text-zone\">\n                <h1>\n                <span className={letterClass}>H</span>\n                <span className={`${letterClass} _12`}>i,</span>\n                <br/>\n                <span className={`${letterClass} _13`}>I</span>\n                <span className={`${letterClass} _14`}>'m</span>\n                <AnimatedLetters letterClass={letterClass} strArray={nameArray} idx={15}/>\n                <br/>\n                <AnimatedLetters letterClass={letterClass} strArray={jobArray} idx={27}/>\n                </h1>\n                <h2>Software Engineer / Backend / Java / Golang / REST API / Agile</h2>\n                <Link to=\"/contact\" className='flat-button'>Contact Me.</Link>\n            </div>\n            <Logo></Logo>\n        </div>\n        <Loader type=\"line-scale\" />\n        </>\n    )\n}\n\nexport default Home;"],"mappings":"sJAAA,MAAO,cAAc,CACrB,OAASA,IAAI,KAAQ,kBAAkB,CACvC,OAASC,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAC3C,MAAO,CAAAC,eAAe,KAAM,oBAAoB,CAChD,MAAO,CAAAC,IAAI,KAAM,QAAQ,CACzB,MAAO,CAAAC,MAAM,KAAM,eAAe,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,gCAAAC,QAAA,IAAAC,SAAA,yBAEnC,GAAM,CAAAC,IAAI,CAAG,QAAP,CAAAA,IAAIA,CAAA,CAAS,CACf,IAAAC,SAAA,CAAsCX,QAAQ,CAAC,cAAc,CAAC,CAAAY,UAAA,CAAAC,cAAA,CAAAF,SAAA,IAAvDG,WAAW,CAAAF,UAAA,IAAEG,cAAc,CAAAH,UAAA,IAClC,GAAM,CAAAI,SAAS,CAAG,CAAC,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAC,CACzE,GAAM,CAAAC,QAAQ,CAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAE9FlB,SAAS,CAAC,UAAM,CACZmB,UAAU,CAAC,UAAM,CACbH,cAAc,CAAC,oBAAoB,CAAC,CACxC,CAAC,CAAE,IAAI,CAAC,CACZ,CAAC,CAAE,EAAE,CAAC,CAEN,mBACIR,KAAA,CAAAE,SAAA,EAAAU,QAAA,eACAZ,KAAA,QAAKa,SAAS,CAAC,qBAAqB,CAAAD,QAAA,eAChCZ,KAAA,QAAKa,SAAS,CAAC,WAAW,CAAAD,QAAA,eACtBZ,KAAA,OAAAY,QAAA,eACAd,IAAA,SAAMe,SAAS,CAAEN,WAAY,CAAAK,QAAA,CAAC,GAAC,CAAM,CAAC,cACtCd,IAAA,SAAMe,SAAS,IAAAC,MAAA,CAAKP,WAAW,QAAO,CAAAK,QAAA,CAAC,IAAE,CAAM,CAAC,cAChDd,IAAA,QAAI,CAAC,cACLA,IAAA,SAAMe,SAAS,IAAAC,MAAA,CAAKP,WAAW,QAAO,CAAAK,QAAA,CAAC,GAAC,CAAM,CAAC,cAC/Cd,IAAA,SAAMe,SAAS,IAAAC,MAAA,CAAKP,WAAW,QAAO,CAAAK,QAAA,CAAC,IAAE,CAAM,CAAC,cAChDd,IAAA,CAACJ,eAAe,EAACa,WAAW,CAAEA,WAAY,CAACQ,QAAQ,CAAEN,SAAU,CAACO,GAAG,CAAE,EAAG,CAAC,CAAC,cAC1ElB,IAAA,QAAI,CAAC,cACLA,IAAA,CAACJ,eAAe,EAACa,WAAW,CAAEA,WAAY,CAACQ,QAAQ,CAAEL,QAAS,CAACM,GAAG,CAAE,EAAG,CAAC,CAAC,EACrE,CAAC,cACLlB,IAAA,OAAAc,QAAA,CAAI,gEAA8D,CAAI,CAAC,cACvEd,IAAA,CAACP,IAAI,EAAC0B,EAAE,CAAC,UAAU,CAACJ,SAAS,CAAC,aAAa,CAAAD,QAAA,CAAC,aAAW,CAAM,CAAC,EAC7D,CAAC,cACNd,IAAA,CAACH,IAAI,GAAO,CAAC,EACZ,CAAC,cACNG,IAAA,CAACF,MAAM,EAACsB,IAAI,CAAC,YAAY,CAAE,CAAC,EAC1B,CAAC,CAEX,CAAC,CAED,cAAe,CAAAf,IAAI"},"metadata":{},"sourceType":"module","externalDependencies":[]}