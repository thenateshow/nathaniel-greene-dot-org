{"ast":null,"code":"import * as React from 'react';\nimport {\n// @ts-ignore it is not seen in exports\nunstable_createElement as createElement } from 'react-native';\nimport SvgTouchableMixin from './lib/SvgTouchableMixin';\nimport { resolve } from './lib/resolve';\nimport { transformsArrayToProps } from './lib/extract/extractTransform';\nconst hasTouchableProperty = props => props.onPress || props.onPressIn || props.onPressOut || props.onLongPress;\nconst camelCaseToDashed = camelCase => {\n  return camelCase.replace(/[A-Z]/g, m => '-' + m.toLowerCase());\n};\nfunction stringifyTransformProps(transformProps) {\n  const transformArray = [];\n  if (transformProps.translate != null) {\n    transformArray.push(`translate(${transformProps.translate})`);\n  }\n  if (transformProps.translateX != null || transformProps.translateY != null) {\n    transformArray.push(`translate(${transformProps.translateX || 0}, ${transformProps.translateY || 0})`);\n  }\n  if (transformProps.scale != null) {\n    transformArray.push(`scale(${transformProps.scale})`);\n  }\n  if (transformProps.scaleX != null || transformProps.scaleY != null) {\n    transformArray.push(`scale(${transformProps.scaleX || 1}, ${transformProps.scaleY || 1})`);\n  }\n  // rotation maps to rotate, not to collide with the text rotate attribute (which acts per glyph rather than block)\n  if (transformProps.rotation != null) {\n    transformArray.push(`rotate(${transformProps.rotation})`);\n  }\n  if (transformProps.skewX != null) {\n    transformArray.push(`skewX(${transformProps.skewX})`);\n  }\n  if (transformProps.skewY != null) {\n    transformArray.push(`skewY(${transformProps.skewY})`);\n  }\n  return transformArray;\n}\nfunction parseTransformProp(transform, props) {\n  const transformArray = [];\n  props && transformArray.push(...stringifyTransformProps(props));\n  if (Array.isArray(transform)) {\n    if (typeof transform[0] === 'number') {\n      transformArray.push(`matrix(${transform.join(' ')})`);\n    } else {\n      const stringifiedProps = transformsArrayToProps(transform);\n      transformArray.push(...stringifyTransformProps(stringifiedProps));\n    }\n  } else if (typeof transform === 'string') {\n    transformArray.push(transform);\n  }\n  return transformArray.length ? transformArray.join(' ') : undefined;\n}\n\n/**\n * `react-native-svg` supports additional props that aren't defined in the spec.\n * This function replaces them in a spec conforming manner.\n *\n * @param {WebShape} self Instance given to us.\n * @param {Object?} props Optional overridden props given to us.\n * @returns {Object} Cleaned props object.\n * @private\n */\nconst prepare = function (self) {\n  let props = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : self.props;\n  const {\n    transform,\n    origin,\n    originX,\n    originY,\n    fontFamily,\n    fontSize,\n    fontWeight,\n    fontStyle,\n    style,\n    forwardedRef,\n    gradientTransform,\n    patternTransform,\n    ...rest\n  } = props;\n  const clean = {\n    ...(hasTouchableProperty(props) ? {\n      onStartShouldSetResponder: self.touchableHandleStartShouldSetResponder,\n      onResponderTerminationRequest: self.touchableHandleResponderTerminationRequest,\n      onResponderGrant: self.touchableHandleResponderGrant,\n      onResponderMove: self.touchableHandleResponderMove,\n      onResponderRelease: self.touchableHandleResponderRelease,\n      onResponderTerminate: self.touchableHandleResponderTerminate\n    } : null),\n    ...rest\n  };\n  if (origin != null) {\n    clean['transform-origin'] = origin.toString().replace(',', ' ');\n  } else if (originX != null || originY != null) {\n    clean['transform-origin'] = `${originX || 0} ${originY || 0}`;\n  }\n\n  // we do it like this because setting transform as undefined causes error in web\n  const parsedTransform = parseTransformProp(transform, props);\n  if (parsedTransform) {\n    clean.transform = parsedTransform;\n  }\n  const parsedGradientTransform = parseTransformProp(gradientTransform);\n  if (parsedGradientTransform) {\n    clean.gradientTransform = parsedGradientTransform;\n  }\n  const parsedPatternTransform = parseTransformProp(patternTransform);\n  if (parsedPatternTransform) {\n    clean.patternTransform = parsedPatternTransform;\n  }\n  clean.ref = el => {\n    self.elementRef.current = el;\n    if (typeof forwardedRef === 'function') {\n      forwardedRef(el);\n    } else if (forwardedRef) {\n      forwardedRef.current = el;\n    }\n  };\n  const styles = {};\n  if (fontFamily != null) {\n    styles.fontFamily = fontFamily;\n  }\n  if (fontSize != null) {\n    styles.fontSize = fontSize;\n  }\n  if (fontWeight != null) {\n    styles.fontWeight = fontWeight;\n  }\n  if (fontStyle != null) {\n    styles.fontStyle = fontStyle;\n  }\n  clean.style = resolve(style, styles);\n  return clean;\n};\nconst getBoundingClientRect = node => {\n  if (node) {\n    const isElement = node.nodeType === 1; /* Node.ELEMENT_NODE */\n    if (isElement && typeof node.getBoundingClientRect === 'function') {\n      return node.getBoundingClientRect();\n    }\n  }\n  throw new Error('Can not get boundingClientRect of ' + node || 'undefined');\n};\nconst measureLayout = (node, callback) => {\n  const relativeNode = node === null || node === void 0 ? void 0 : node.parentNode;\n  if (relativeNode) {\n    setTimeout(() => {\n      // @ts-expect-error TODO: handle it better\n      const relativeRect = getBoundingClientRect(relativeNode);\n      const {\n        height,\n        left,\n        top,\n        width\n      } = getBoundingClientRect(node);\n      const x = left - relativeRect.left;\n      const y = top - relativeRect.top;\n      callback(x, y, width, height, left, top);\n    }, 0);\n  }\n};\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction remeasure() {\n  const tag = this.state.touchable.responderID;\n  if (tag === null) {\n    return;\n  }\n  measureLayout(tag, this._handleQueryLayout);\n}\nexport class WebShape extends React.Component {\n  prepareProps(props) {\n    return props;\n  }\n  elementRef = /*#__PURE__*/React.createRef();\n  lastMergedProps = {};\n\n  /**\n   * disclaimer: I am not sure why the props are wrapped in a `style` attribute here, but that's how reanimated calls it\n   */\n  setNativeProps(props) {\n    const merged = Object.assign({}, this.props, this.lastMergedProps, props.style);\n    this.lastMergedProps = merged;\n    const clean = prepare(this, this.prepareProps(merged));\n    const current = this.elementRef.current;\n    if (current) {\n      for (const cleanAttribute of Object.keys(clean)) {\n        const cleanValue = clean[cleanAttribute];\n        switch (cleanAttribute) {\n          case 'ref':\n          case 'children':\n            break;\n          case 'style':\n            // style can be an object here or an array, so we convert it to an array and assign each element\n            for (const partialStyle of [].concat(clean.style ?? [])) {\n              Object.assign(current.style, partialStyle);\n            }\n            break;\n          default:\n            // apply all other incoming prop updates as attributes on the node\n            // same logic as in https://github.com/software-mansion/react-native-reanimated/blob/d04720c82f5941532991b235787285d36d717247/src/reanimated2/js-reanimated/index.ts#L38-L39\n            // @ts-expect-error TODO: fix this\n            current.setAttribute(camelCaseToDashed(cleanAttribute), cleanValue);\n            break;\n        }\n      }\n    }\n  }\n  constructor(props) {\n    super(props);\n\n    // Do not attach touchable mixin handlers if SVG element doesn't have a touchable prop\n    if (hasTouchableProperty(props)) {\n      SvgTouchableMixin(this);\n    }\n    this._remeasureMetricsOnActivation = remeasure.bind(this);\n  }\n  render() {\n    if (!this.tag) {\n      throw new Error('When extending `WebShape` you need to overwrite either `tag` or `render`!');\n    }\n    this.lastMergedProps = {};\n    return createElement(this.tag, prepare(this, this.prepareProps(this.props)));\n  }\n}\nexport class Circle extends WebShape {\n  tag = 'circle';\n}\nexport class ClipPath extends WebShape {\n  tag = 'clipPath';\n}\nexport class Defs extends WebShape {\n  tag = 'defs';\n}\nexport class Ellipse extends WebShape {\n  tag = 'ellipse';\n}\nexport class G extends WebShape {\n  tag = 'g';\n  prepareProps(props) {\n    const {\n      x,\n      y,\n      ...rest\n    } = props;\n    if ((x || y) && !rest.translate) {\n      rest.translate = `${x || 0}, ${y || 0}`;\n    }\n    return rest;\n  }\n}\nexport class Image extends WebShape {\n  tag = 'image';\n}\nexport class Line extends WebShape {\n  tag = 'line';\n}\nexport class LinearGradient extends WebShape {\n  tag = 'linearGradient';\n}\nexport class Path extends WebShape {\n  tag = 'path';\n}\nexport class Polygon extends WebShape {\n  tag = 'polygon';\n}\nexport class Polyline extends WebShape {\n  tag = 'polyline';\n}\nexport class RadialGradient extends WebShape {\n  tag = 'radialGradient';\n}\nexport class Rect extends WebShape {\n  tag = 'rect';\n}\nexport class Stop extends WebShape {\n  tag = 'stop';\n}\n\n/* Taken from here: https://gist.github.com/jennyknuth/222825e315d45a738ed9d6e04c7a88d0 */\nfunction encodeSvg(svgString) {\n  return svgString.replace('<svg', ~svgString.indexOf('xmlns') ? '<svg' : '<svg xmlns=\"http://www.w3.org/2000/svg\"').replace(/\"/g, \"'\").replace(/%/g, '%25').replace(/#/g, '%23').replace(/{/g, '%7B').replace(/}/g, '%7D').replace(/</g, '%3C').replace(/>/g, '%3E').replace(/\\s+/g, ' ');\n}\nexport class Svg extends WebShape {\n  tag = 'svg';\n  toDataURL(callback) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    const ref = this.elementRef.current;\n    if (ref === null) {\n      return;\n    }\n    const rect = getBoundingClientRect(ref);\n    const width = Number(options.width) || rect.width;\n    const height = Number(options.height) || rect.height;\n    const svg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n    svg.setAttribute('viewBox', `0 0 ${rect.width} ${rect.height}`);\n    svg.setAttribute('width', String(width));\n    svg.setAttribute('height', String(height));\n    svg.appendChild(ref.cloneNode(true));\n    const img = new window.Image();\n    img.onload = () => {\n      const canvas = document.createElement('canvas');\n      canvas.width = width;\n      canvas.height = height;\n      const context = canvas.getContext('2d');\n      context === null || context === void 0 ? void 0 : context.drawImage(img, 0, 0);\n      callback(canvas.toDataURL().replace('data:image/png;base64,', ''));\n    };\n    img.src = `data:image/svg+xml;utf8,${encodeSvg(new window.XMLSerializer().serializeToString(svg))}`;\n  }\n}\nexport class Symbol extends WebShape {\n  tag = 'symbol';\n}\nexport class Text extends WebShape {\n  tag = 'text';\n}\nexport class TSpan extends WebShape {\n  tag = 'tspan';\n}\nexport class TextPath extends WebShape {\n  tag = 'textPath';\n}\nexport class Use extends WebShape {\n  tag = 'use';\n}\nexport class Mask extends WebShape {\n  tag = 'mask';\n}\nexport class ForeignObject extends WebShape {\n  tag = 'foreignObject';\n}\nexport class Marker extends WebShape {\n  tag = 'marker';\n}\nexport class Pattern extends WebShape {\n  tag = 'pattern';\n}\nexport default Svg;","map":{"version":3,"names":["React","unstable_createElement","createElement","SvgTouchableMixin","resolve","transformsArrayToProps","hasTouchableProperty","props","onPress","onPressIn","onPressOut","onLongPress","camelCaseToDashed","camelCase","replace","m","toLowerCase","stringifyTransformProps","transformProps","transformArray","translate","push","translateX","translateY","scale","scaleX","scaleY","rotation","skewX","skewY","parseTransformProp","transform","Array","isArray","join","stringifiedProps","length","undefined","prepare","self","arguments","origin","originX","originY","fontFamily","fontSize","fontWeight","fontStyle","style","forwardedRef","gradientTransform","patternTransform","rest","clean","onStartShouldSetResponder","touchableHandleStartShouldSetResponder","onResponderTerminationRequest","touchableHandleResponderTerminationRequest","onResponderGrant","touchableHandleResponderGrant","onResponderMove","touchableHandleResponderMove","onResponderRelease","touchableHandleResponderRelease","onResponderTerminate","touchableHandleResponderTerminate","toString","parsedTransform","parsedGradientTransform","parsedPatternTransform","ref","el","elementRef","current","styles","getBoundingClientRect","node","isElement","nodeType","Error","measureLayout","callback","relativeNode","parentNode","setTimeout","relativeRect","height","left","top","width","x","y","remeasure","tag","state","touchable","responderID","_handleQueryLayout","WebShape","Component","prepareProps","createRef","lastMergedProps","setNativeProps","merged","Object","assign","cleanAttribute","keys","cleanValue","partialStyle","concat","setAttribute","constructor","_remeasureMetricsOnActivation","bind","render","Circle","ClipPath","Defs","Ellipse","G","Image","Line","LinearGradient","Path","Polygon","Polyline","RadialGradient","Rect","Stop","encodeSvg","svgString","indexOf","Svg","toDataURL","options","rect","Number","svg","document","createElementNS","String","appendChild","cloneNode","img","window","onload","canvas","context","getContext","drawImage","src","XMLSerializer","serializeToString","Symbol","Text","TSpan","TextPath","Use","Mask","ForeignObject","Marker","Pattern"],"sources":["/Users/nathanielgreene/Desktop/practicePortfolio/react-portfolio/node_modules/react-native-svg/lib/module/ReactNativeSVG.web.js"],"sourcesContent":["import * as React from 'react';\nimport {\n// @ts-ignore it is not seen in exports\nunstable_createElement as createElement } from 'react-native';\nimport SvgTouchableMixin from './lib/SvgTouchableMixin';\nimport { resolve } from './lib/resolve';\nimport { transformsArrayToProps } from './lib/extract/extractTransform';\nconst hasTouchableProperty = props => props.onPress || props.onPressIn || props.onPressOut || props.onLongPress;\nconst camelCaseToDashed = camelCase => {\n  return camelCase.replace(/[A-Z]/g, m => '-' + m.toLowerCase());\n};\nfunction stringifyTransformProps(transformProps) {\n  const transformArray = [];\n  if (transformProps.translate != null) {\n    transformArray.push(`translate(${transformProps.translate})`);\n  }\n  if (transformProps.translateX != null || transformProps.translateY != null) {\n    transformArray.push(`translate(${transformProps.translateX || 0}, ${transformProps.translateY || 0})`);\n  }\n  if (transformProps.scale != null) {\n    transformArray.push(`scale(${transformProps.scale})`);\n  }\n  if (transformProps.scaleX != null || transformProps.scaleY != null) {\n    transformArray.push(`scale(${transformProps.scaleX || 1}, ${transformProps.scaleY || 1})`);\n  }\n  // rotation maps to rotate, not to collide with the text rotate attribute (which acts per glyph rather than block)\n  if (transformProps.rotation != null) {\n    transformArray.push(`rotate(${transformProps.rotation})`);\n  }\n  if (transformProps.skewX != null) {\n    transformArray.push(`skewX(${transformProps.skewX})`);\n  }\n  if (transformProps.skewY != null) {\n    transformArray.push(`skewY(${transformProps.skewY})`);\n  }\n  return transformArray;\n}\nfunction parseTransformProp(transform, props) {\n  const transformArray = [];\n  props && transformArray.push(...stringifyTransformProps(props));\n  if (Array.isArray(transform)) {\n    if (typeof transform[0] === 'number') {\n      transformArray.push(`matrix(${transform.join(' ')})`);\n    } else {\n      const stringifiedProps = transformsArrayToProps(transform);\n      transformArray.push(...stringifyTransformProps(stringifiedProps));\n    }\n  } else if (typeof transform === 'string') {\n    transformArray.push(transform);\n  }\n  return transformArray.length ? transformArray.join(' ') : undefined;\n}\n\n/**\n * `react-native-svg` supports additional props that aren't defined in the spec.\n * This function replaces them in a spec conforming manner.\n *\n * @param {WebShape} self Instance given to us.\n * @param {Object?} props Optional overridden props given to us.\n * @returns {Object} Cleaned props object.\n * @private\n */\nconst prepare = function (self) {\n  let props = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : self.props;\n  const {\n    transform,\n    origin,\n    originX,\n    originY,\n    fontFamily,\n    fontSize,\n    fontWeight,\n    fontStyle,\n    style,\n    forwardedRef,\n    gradientTransform,\n    patternTransform,\n    ...rest\n  } = props;\n  const clean = {\n    ...(hasTouchableProperty(props) ? {\n      onStartShouldSetResponder: self.touchableHandleStartShouldSetResponder,\n      onResponderTerminationRequest: self.touchableHandleResponderTerminationRequest,\n      onResponderGrant: self.touchableHandleResponderGrant,\n      onResponderMove: self.touchableHandleResponderMove,\n      onResponderRelease: self.touchableHandleResponderRelease,\n      onResponderTerminate: self.touchableHandleResponderTerminate\n    } : null),\n    ...rest\n  };\n  if (origin != null) {\n    clean['transform-origin'] = origin.toString().replace(',', ' ');\n  } else if (originX != null || originY != null) {\n    clean['transform-origin'] = `${originX || 0} ${originY || 0}`;\n  }\n\n  // we do it like this because setting transform as undefined causes error in web\n  const parsedTransform = parseTransformProp(transform, props);\n  if (parsedTransform) {\n    clean.transform = parsedTransform;\n  }\n  const parsedGradientTransform = parseTransformProp(gradientTransform);\n  if (parsedGradientTransform) {\n    clean.gradientTransform = parsedGradientTransform;\n  }\n  const parsedPatternTransform = parseTransformProp(patternTransform);\n  if (parsedPatternTransform) {\n    clean.patternTransform = parsedPatternTransform;\n  }\n  clean.ref = el => {\n    self.elementRef.current = el;\n    if (typeof forwardedRef === 'function') {\n      forwardedRef(el);\n    } else if (forwardedRef) {\n      forwardedRef.current = el;\n    }\n  };\n  const styles = {};\n  if (fontFamily != null) {\n    styles.fontFamily = fontFamily;\n  }\n  if (fontSize != null) {\n    styles.fontSize = fontSize;\n  }\n  if (fontWeight != null) {\n    styles.fontWeight = fontWeight;\n  }\n  if (fontStyle != null) {\n    styles.fontStyle = fontStyle;\n  }\n  clean.style = resolve(style, styles);\n  return clean;\n};\nconst getBoundingClientRect = node => {\n  if (node) {\n    const isElement = node.nodeType === 1; /* Node.ELEMENT_NODE */\n    if (isElement && typeof node.getBoundingClientRect === 'function') {\n      return node.getBoundingClientRect();\n    }\n  }\n  throw new Error('Can not get boundingClientRect of ' + node || 'undefined');\n};\nconst measureLayout = (node, callback) => {\n  const relativeNode = node === null || node === void 0 ? void 0 : node.parentNode;\n  if (relativeNode) {\n    setTimeout(() => {\n      // @ts-expect-error TODO: handle it better\n      const relativeRect = getBoundingClientRect(relativeNode);\n      const {\n        height,\n        left,\n        top,\n        width\n      } = getBoundingClientRect(node);\n      const x = left - relativeRect.left;\n      const y = top - relativeRect.top;\n      callback(x, y, width, height, left, top);\n    }, 0);\n  }\n};\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction remeasure() {\n  const tag = this.state.touchable.responderID;\n  if (tag === null) {\n    return;\n  }\n  measureLayout(tag, this._handleQueryLayout);\n}\nexport class WebShape extends React.Component {\n  prepareProps(props) {\n    return props;\n  }\n  elementRef = /*#__PURE__*/React.createRef();\n  lastMergedProps = {};\n\n  /**\n   * disclaimer: I am not sure why the props are wrapped in a `style` attribute here, but that's how reanimated calls it\n   */\n  setNativeProps(props) {\n    const merged = Object.assign({}, this.props, this.lastMergedProps, props.style);\n    this.lastMergedProps = merged;\n    const clean = prepare(this, this.prepareProps(merged));\n    const current = this.elementRef.current;\n    if (current) {\n      for (const cleanAttribute of Object.keys(clean)) {\n        const cleanValue = clean[cleanAttribute];\n        switch (cleanAttribute) {\n          case 'ref':\n          case 'children':\n            break;\n          case 'style':\n            // style can be an object here or an array, so we convert it to an array and assign each element\n            for (const partialStyle of [].concat(clean.style ?? [])) {\n              Object.assign(current.style, partialStyle);\n            }\n            break;\n          default:\n            // apply all other incoming prop updates as attributes on the node\n            // same logic as in https://github.com/software-mansion/react-native-reanimated/blob/d04720c82f5941532991b235787285d36d717247/src/reanimated2/js-reanimated/index.ts#L38-L39\n            // @ts-expect-error TODO: fix this\n            current.setAttribute(camelCaseToDashed(cleanAttribute), cleanValue);\n            break;\n        }\n      }\n    }\n  }\n  constructor(props) {\n    super(props);\n\n    // Do not attach touchable mixin handlers if SVG element doesn't have a touchable prop\n    if (hasTouchableProperty(props)) {\n      SvgTouchableMixin(this);\n    }\n    this._remeasureMetricsOnActivation = remeasure.bind(this);\n  }\n  render() {\n    if (!this.tag) {\n      throw new Error('When extending `WebShape` you need to overwrite either `tag` or `render`!');\n    }\n    this.lastMergedProps = {};\n    return createElement(this.tag, prepare(this, this.prepareProps(this.props)));\n  }\n}\nexport class Circle extends WebShape {\n  tag = 'circle';\n}\nexport class ClipPath extends WebShape {\n  tag = 'clipPath';\n}\nexport class Defs extends WebShape {\n  tag = 'defs';\n}\nexport class Ellipse extends WebShape {\n  tag = 'ellipse';\n}\nexport class G extends WebShape {\n  tag = 'g';\n  prepareProps(props) {\n    const {\n      x,\n      y,\n      ...rest\n    } = props;\n    if ((x || y) && !rest.translate) {\n      rest.translate = `${x || 0}, ${y || 0}`;\n    }\n    return rest;\n  }\n}\nexport class Image extends WebShape {\n  tag = 'image';\n}\nexport class Line extends WebShape {\n  tag = 'line';\n}\nexport class LinearGradient extends WebShape {\n  tag = 'linearGradient';\n}\nexport class Path extends WebShape {\n  tag = 'path';\n}\nexport class Polygon extends WebShape {\n  tag = 'polygon';\n}\nexport class Polyline extends WebShape {\n  tag = 'polyline';\n}\nexport class RadialGradient extends WebShape {\n  tag = 'radialGradient';\n}\nexport class Rect extends WebShape {\n  tag = 'rect';\n}\nexport class Stop extends WebShape {\n  tag = 'stop';\n}\n\n/* Taken from here: https://gist.github.com/jennyknuth/222825e315d45a738ed9d6e04c7a88d0 */\nfunction encodeSvg(svgString) {\n  return svgString.replace('<svg', ~svgString.indexOf('xmlns') ? '<svg' : '<svg xmlns=\"http://www.w3.org/2000/svg\"').replace(/\"/g, \"'\").replace(/%/g, '%25').replace(/#/g, '%23').replace(/{/g, '%7B').replace(/}/g, '%7D').replace(/</g, '%3C').replace(/>/g, '%3E').replace(/\\s+/g, ' ');\n}\nexport class Svg extends WebShape {\n  tag = 'svg';\n  toDataURL(callback) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    const ref = this.elementRef.current;\n    if (ref === null) {\n      return;\n    }\n    const rect = getBoundingClientRect(ref);\n    const width = Number(options.width) || rect.width;\n    const height = Number(options.height) || rect.height;\n    const svg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n    svg.setAttribute('viewBox', `0 0 ${rect.width} ${rect.height}`);\n    svg.setAttribute('width', String(width));\n    svg.setAttribute('height', String(height));\n    svg.appendChild(ref.cloneNode(true));\n    const img = new window.Image();\n    img.onload = () => {\n      const canvas = document.createElement('canvas');\n      canvas.width = width;\n      canvas.height = height;\n      const context = canvas.getContext('2d');\n      context === null || context === void 0 ? void 0 : context.drawImage(img, 0, 0);\n      callback(canvas.toDataURL().replace('data:image/png;base64,', ''));\n    };\n    img.src = `data:image/svg+xml;utf8,${encodeSvg(new window.XMLSerializer().serializeToString(svg))}`;\n  }\n}\nexport class Symbol extends WebShape {\n  tag = 'symbol';\n}\nexport class Text extends WebShape {\n  tag = 'text';\n}\nexport class TSpan extends WebShape {\n  tag = 'tspan';\n}\nexport class TextPath extends WebShape {\n  tag = 'textPath';\n}\nexport class Use extends WebShape {\n  tag = 'use';\n}\nexport class Mask extends WebShape {\n  tag = 'mask';\n}\nexport class ForeignObject extends WebShape {\n  tag = 'foreignObject';\n}\nexport class Marker extends WebShape {\n  tag = 'marker';\n}\nexport class Pattern extends WebShape {\n  tag = 'pattern';\n}\nexport default Svg;\n//# sourceMappingURL=ReactNativeSVG.web.js.map"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}